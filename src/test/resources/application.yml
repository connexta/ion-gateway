server:
  port: 9000
  error:
    include-stacktrace: always

kc:
  base-uri: http://keycloak:8080/auth
  realm: master
  issuer-uri: ${kc.base-uri}/realms/${kc.realm}

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: TRACE
    org.springframework.security.oauth2: TRACE
    org.springframework.cloud.gateway: TRACE
#    org.springframework.boot.autoconfigure: DEBUG

spring:
  application:
    name: ion-gateway
  spring:
    thymeleaf:
      cache: false
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${kc.issuer-uri}/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            provider: keycloak
            clientId: login-client
            clientSecret: secret
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${kc.issuer-uri}/protocol/openid-connect/auth
            jwk-set-uri: ${kc.issuer-uri}/protocol/openid-connect/certs
            token-uri: ${kc.issuer-uri}/protocol/openid-connect/token
            user-info-uri: ${kc.issuer-uri}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
  cloud:
    gateway:
      routes:
        - id: example
          uri: http://example.com
          predicates:
            - Path=/example/**
          filters:
            - TokenRelay= # passes along JWT to internal services